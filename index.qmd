---
format: 
    revealjs:
        theme: default
        logo: "images/JAX_logo_rgb_transparentback.png"
        slide-number: true
        footer: Imaging Applications, Research IT
        transition: "slide"
        highlight-style: arrow
        chalkboard: 
            buttons: false
        controls-layout: bottom-right
        controls: true
---

## Introduction to QuPath

**Peter Sobolewski (he/him)**

Systems Analyst, Imaging Applications

Research IT

:::: {.columns style='display: flex'}
::: {.column width="50%" style='display: flex; justify-content: left; align-items: center;'}

### [https://qupath.github.io](https://qupath.github.io) 

:::
::: {.column width="50%" style='display: flex; justify-content: center;'}

![](images/qupath_128.png){fig-alt="QuPath logo" width=250} 

:::
::::

## Welcome

## What is QuPath?

QuPath is an open-source image analysis program

<br/>

**Key feature**:  
QuPath has a graphical user interface (`GUI`) for performant working with very large 2D images, like those produced by slide scanners

---

## A bit of background

- project was started at The Queen's University Belfast by Pete Bankhead
- first public release was in October 2016
- currently developed by [Pete Bankhead's group at The University of Edinburgh](https://www.ed.ac.uk/pathology/people/staff-students/peter-bankhead)
- \>7500 publications [using QuPath](https://scholar.google.com/scholar?start=0&q=qupath)

---

## Strengths of QuPath

- Was designed for very large, multiscale 2D files

- Includes extensitve annotation, overlay, and visualization options

- It includes robust algorithms for common analysis tasks

- It includes *interactive* machine learning for pixel and object classification

- Recordable workflows allow for easy batch processing

- Integrated ImageJ

- Robust scripting support (Groovy)

---

## Limitations

- Limited *3D viewing* capabilities:
    - single planes only

- Some complex functions require scripting

- Extension ecosystem is relatively limited

---

## Anatomy of a QuPath `project`

- `projects` are the best way to organize your analysis work
- `projects` are frequently required by some scripts/extensions
- `projects` are folders:
    - group together related images
    - organize data, scripts, classifiers, etc. 

---

## Anatomy of a QuPath `project`

<br/>

![](images/project_folder.png){fig-alt="Screenshot showing the contents of a QuPath project folder." fig-align="center"}

---

## Anatomy of a QuPath `project`

- **image files will not be copied into your `project` folder!** 
    - A link (`URI`) will be used! 
    - If you move the file(s) you will be prompted to update the link.
- QuPath can handle large 2D images, e.g. whole-slide images
    - *there is no need to make tiles first*
    - QuPath will generate multiscale (pyramids) representations as needed

---

## Anatomy of a QuPath `project`

- **QuPath will never edit your image files!**
    - `images` in a `project` are are actually QuPath objects holding metadata, annotations, etc. are handled
    - the image data/pixels are accessed from the files via an `ImageServer`
    - duplicating or saving `images` with a `project` only relates to QuPath specific data and **not** the original files or pixels

---